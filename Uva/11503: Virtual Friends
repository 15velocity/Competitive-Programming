#include<iostream>
#include<string>
#include<map>

using namespace std;

int s[100000];
map<string,int> friends;

int find(int x)
{
	if(s[x]<=-1)
		return x;
	else
		return find(s[x]);	
}

void Union(string u,string v)
{
	if(u==v || find(friends[u])==find(friends[v]))
	{
		cout<<-1*s[find(friends[u])]<<endl;
		return;
	}
	if(find(friends[u])<find(friends[v]))
	{
		s[find(friends[u])]+=s[find(friends[v])];
		s[find(friends[v])]=find(friends[u]);	
	}
	else
	{
		s[find(friends[v])]+=s[find(friends[u])];
		s[find(friends[u])]=find(friends[v]);	
	}
	cout<<-1*s[find(friends[u])]<<endl;
}

int main()
{
	int tc,f,j;
	string a,b;
	cin>>tc;
	while(tc--)
	{
		friends.clear();
		cin>>f;
		j=1;
		for(int i=0;i<f;i++)
		{
			cin>>a>>b;
			if(!friends[a])
			{
				friends[a]=j;
				s[j++]=-1;
			}
			if(!friends[b])
			{
				friends[b]=j;
				s[j++]=-1;
			}
			Union(a,b);		
		}
	}
}
